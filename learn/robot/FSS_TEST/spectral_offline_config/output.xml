<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.7.2 on win32)" generated="20190527 22:01:58.217" rpa="false">
<suite id="s1" name="Spectral Offline Config" source="E:\learn\robot\FSS_TEST\spectral_offline_config\spectral_offline_config.robot">
<kw name="Open Connection And Login And Disconnet Capwap" type="setup">
<kw name="Open Connection" library="Telnet">
<doc>Opens a new Telnet connection to the given host and port.</doc>
<arguments>
<arg>${AC_IP}</arg>
<arg>port=${AC_PORT}</arg>
</arguments>
<msg timestamp="20190527 22:01:58.730" level="INFO">Opening connection to 172.30.103.194:23 with prompt: (&gt;|#)$ (regexp)</msg>
<status status="PASS" starttime="20190527 22:01:58.729" endtime="20190527 22:01:58.739"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>chr(int(3))</arg>
</arguments>
<assign>
<var>${CTRL_C}</var>
</assign>
<msg timestamp="20190527 22:01:58.740" level="INFO">${CTRL_C} = </msg>
<status status="PASS" starttime="20190527 22:01:58.739" endtime="20190527 22:01:58.740"></status>
</kw>
<kw name="Set Timeout" library="Telnet">
<doc>Sets the timeout used for waiting output in the current connection.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:58.740" endtime="20190527 22:01:58.740"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:01:59.741" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:01:58.741" endtime="20190527 22:01:59.741"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>${CTRL_C}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:59.742" endtime="20190527 22:01:59.745"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:01:59.747" level="INFO">WS5308#</msg>
<status status="PASS" starttime="20190527 22:01:59.746" endtime="20190527 22:01:59.747"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>co</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:59.747" endtime="20190527 22:01:59.767"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>ap-config ${AP_MAC}</arg>
</arguments>
<msg timestamp="20190527 22:01:59.796" level="INFO">WS5308#co</msg>
<status status="PASS" starttime="20190527 22:01:59.767" endtime="20190527 22:01:59.796"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no spectral enable radio 1</arg>
</arguments>
<msg timestamp="20190527 22:02:00.035" level="INFO">Enter configuration commands, one per line.  End with CNTL/Z.</msg>
<status status="PASS" starttime="20190527 22:01:59.796" endtime="20190527 22:02:00.035"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no spectral enable radio 2</arg>
</arguments>
<msg timestamp="20190527 22:02:00.079" level="INFO">WS5308(config)#ap-config 00d0.f822.334c</msg>
<status status="PASS" starttime="20190527 22:02:00.035" endtime="20190527 22:02:00.079"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no spectral enable radio 3</arg>
</arguments>
<msg timestamp="20190527 22:02:00.125" level="INFO">You are going to config AP(AP740-I-newFlash), which is online now.</msg>
<status status="PASS" starttime="20190527 22:02:00.079" endtime="20190527 22:02:00.125"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no spectral enable</arg>
</arguments>
<msg timestamp="20190527 22:02:00.157" level="INFO">WS5308(config-ap)#no spectral enable radio 1</msg>
<status status="PASS" starttime="20190527 22:02:00.125" endtime="20190527 22:02:00.157"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:00.558" level="INFO">WS5308(config-ap)#no spectral enable radio 2
WS5308(config-ap)#no spectral enable radio 3
WS5308(config-ap)#no spectral enable
WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:02:00.157" endtime="20190527 22:02:00.558"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show ap-config running ${AP_NAME}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:00.578" level="INFO">show ap-config running AP740-I-newFlash</msg>
<msg timestamp="20190527 22:02:01.097" level="INFO">Building configuration...
Current configuration: 83 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
!
end
WS5308(config-ap)#</msg>
<msg timestamp="20190527 22:02:01.098" level="INFO">${output} = 
Building configuration...
Current configuration: 83 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
!
end
WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:02:00.558" endtime="20190527 22:02:01.098"></status>
</kw>
<kw name="Should Not Match" library="BuiltIn">
<doc>Fails if the given ``string`` matches the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:01.098" endtime="20190527 22:02:01.099"></status>
</kw>
<kw name="Open Connection" library="Telnet">
<doc>Opens a new Telnet connection to the given host and port.</doc>
<arguments>
<arg>${AP_IP}</arg>
<arg>port=${AP_PORT}</arg>
</arguments>
<msg timestamp="20190527 22:02:01.100" level="INFO">Opening connection to 172.30.103.147:23 with prompt: (&gt;|#)$ (regexp)</msg>
<status status="PASS" starttime="20190527 22:02:01.100" endtime="20190527 22:02:01.102"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>chr(int(3))</arg>
</arguments>
<assign>
<var>${CTRL_C}</var>
</assign>
<msg timestamp="20190527 22:02:01.103" level="INFO">${CTRL_C} = </msg>
<status status="PASS" starttime="20190527 22:02:01.102" endtime="20190527 22:02:01.103"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${AP_IP}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:01.104" endtime="20190527 22:02:01.105"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${CTRL_C}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:01.105" endtime="20190527 22:02:01.107"></status>
</kw>
<kw name="Set Timeout" library="Telnet">
<doc>Sets the timeout used for waiting output in the current connection.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:01.107" endtime="20190527 22:02:01.108"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:02.109" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:01.109" endtime="20190527 22:02:02.109"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>${CTRL_C}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:02.109" endtime="20190527 22:02:02.110"></status>
</kw>
<kw name="Read Until" library="Telnet">
<doc>Reads output until ``expected`` text is encountered.</doc>
<arguments>
<arg>Password:</arg>
</arguments>
<msg timestamp="20190527 22:02:02.111" level="INFO">User Access Verification

Password:</msg>
<status status="PASS" starttime="20190527 22:02:02.110" endtime="20190527 22:02:02.111"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AP_PWD}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:02.112" endtime="20190527 22:02:02.112"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:02.311" level="INFO">Password:

AP740-I-newFlash&gt;</msg>
<status status="PASS" starttime="20190527 22:02:02.113" endtime="20190527 22:02:02.312"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>enable</arg>
</arguments>
<msg timestamp="20190527 22:02:02.512" level="INFO">enable</msg>
<status status="PASS" starttime="20190527 22:02:02.312" endtime="20190527 22:02:02.512"></status>
</kw>
<kw name="Read Until" library="Telnet">
<doc>Reads output until ``expected`` text is encountered.</doc>
<arguments>
<arg>Password:</arg>
</arguments>
<msg timestamp="20190527 22:02:02.513" level="INFO">Password:</msg>
<status status="PASS" starttime="20190527 22:02:02.512" endtime="20190527 22:02:02.514"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AP_EN_PWD}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:02.514" endtime="20190527 22:02:02.722"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:02.723" level="INFO">AP740-I-newFlash#</msg>
<status status="PASS" starttime="20190527 22:02:02.723" endtime="20190527 22:02:02.724"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>co</arg>
</arguments>
<msg timestamp="20190527 22:02:02.931" level="INFO">co</msg>
<status status="PASS" starttime="20190527 22:02:02.724" endtime="20190527 22:02:02.931"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:02.932" level="INFO">Enter configuration commands, one per line.  End with CNTL/Z.
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:02.932" endtime="20190527 22:02:02.932"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>test-capwap p d 1 0</arg>
</arguments>
<msg timestamp="20190527 22:02:03.132" level="INFO">test-capwap p d 1 0</msg>
<status status="PASS" starttime="20190527 22:02:02.932" endtime="20190527 22:02:03.132"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20190527 22:02:06.132" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20190527 22:02:03.132" endtime="20190527 22:02:06.132"></status>
</kw>
<status status="PASS" starttime="20190527 22:01:58.729" endtime="20190527 22:02:06.133"></status>
</kw>
<test id="s1-t1" name="Test offline ap config AP离线以后AC上是否可以配置">
<kw name="Switch Connection" library="Telnet">
<doc>Switches between active connections using an index or an alias.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:06.142" endtime="20190527 22:02:06.142"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:06.144" endtime="20190527 22:02:06.145"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:06.367" level="INFO">WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:02:06.147" endtime="20190527 22:02:06.367"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AC_TEST_CMD1}</arg>
</arguments>
<msg timestamp="20190527 22:02:06.387" level="INFO">spectral enable radio 1</msg>
<status status="PASS" starttime="20190527 22:02:06.369" endtime="20190527 22:02:06.387"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AC_TEST_CMD2}</arg>
</arguments>
<msg timestamp="20190527 22:02:06.445" level="INFO">WS5308(config-ap)#spectral enable radio 2</msg>
<status status="PASS" starttime="20190527 22:02:06.388" endtime="20190527 22:02:06.445"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>spectral enable radio 20</arg>
</arguments>
<msg timestamp="20190527 22:02:06.505" level="INFO">WS5308(config-ap)#spectral enable radio 20</msg>
<status status="PASS" starttime="20190527 22:02:06.446" endtime="20190527 22:02:06.506"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:06.707" level="INFO">WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:02:06.508" endtime="20190527 22:02:06.708"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show ap-config running ${AP_NAME}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:06.726" level="INFO">show ap-config running AP740-I-newFlash</msg>
<msg timestamp="20190527 22:02:07.226" level="INFO">Building configuration...
Current configuration: 162 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
 spectral enable radio 1
 spectral enable radio 2
 spectral enable radio 20
!
end
WS5308(config-ap)#</msg>
<msg timestamp="20190527 22:02:07.226" level="INFO">${output} = 
Building configuration...
Current configuration: 162 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
 spectral enable radio 1
 spectral enable radio 2...</msg>
<status status="PASS" starttime="20190527 22:02:06.710" endtime="20190527 22:02:07.226"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 1*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:07.227" endtime="20190527 22:02:07.228"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 2*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:07.229" endtime="20190527 22:02:07.230"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 20*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:07.231" endtime="20190527 22:02:07.231"></status>
</kw>
<kw name="Check AP CAPWAP">
<arguments>
<arg>${AC_IP}</arg>
</arguments>
<kw name="Switch Connection" library="Telnet">
<doc>Switches between active connections using an index or an alias.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:07.232" endtime="20190527 22:02:07.232"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 1 | 20 ]" type="for">
<kw name="${INDEX} = 1" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:07.233" level="INFO">1</msg>
<status status="PASS" starttime="20190527 22:02:07.233" endtime="20190527 22:02:07.233"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:07.233" endtime="20190527 22:02:07.233"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:07.233" level="INFO">test peer[1] down ok.
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:07.233" endtime="20190527 22:02:07.234"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:07.249" level="INFO">AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:07.249" level="INFO">${output} = AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:07.234" endtime="20190527 22:02:07.249"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:08.249" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:07.249" endtime="20190527 22:02:08.249"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:07.232" endtime="20190527 22:02:08.249"></status>
</kw>
<kw name="${INDEX} = 2" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:08.251" level="INFO">2</msg>
<status status="PASS" starttime="20190527 22:02:08.250" endtime="20190527 22:02:08.252"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:08.252" endtime="20190527 22:02:08.253"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:08.461" level="INFO">show capwap stat
CAPWAP tunnel state, 1 peers, 0 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      DTLS Teardown
AP740-I-newFlash(config)#
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:08.254" endtime="20190527 22:02:08.462"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:08.661" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:08.662" level="INFO">CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:08.662" level="INFO">${output} = CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:08.462" endtime="20190527 22:02:08.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:09.662" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:08.662" endtime="20190527 22:02:09.662"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:08.250" endtime="20190527 22:02:09.662"></status>
</kw>
<kw name="${INDEX} = 3" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:09.663" level="INFO">3</msg>
<status status="PASS" starttime="20190527 22:02:09.662" endtime="20190527 22:02:09.663"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:09.663" endtime="20190527 22:02:09.663"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:09.872" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:09.663" endtime="20190527 22:02:09.872"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:10.072" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:10.072" level="INFO">CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:10.072" level="INFO">${output} = CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:09.872" endtime="20190527 22:02:10.072"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:11.073" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:10.072" endtime="20190527 22:02:11.073"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:09.662" endtime="20190527 22:02:11.073"></status>
</kw>
<kw name="${INDEX} = 4" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:11.073" level="INFO">4</msg>
<status status="PASS" starttime="20190527 22:02:11.073" endtime="20190527 22:02:11.073"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:11.074" endtime="20190527 22:02:11.074"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:11.281" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:11.074" endtime="20190527 22:02:11.281"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:11.285" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:11.491" level="INFO">CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:11.492" level="INFO">${output} = CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:11.282" endtime="20190527 22:02:11.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:12.492" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:11.492" endtime="20190527 22:02:12.492"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:11.073" endtime="20190527 22:02:12.492"></status>
</kw>
<kw name="${INDEX} = 5" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:12.492" level="INFO">5</msg>
<status status="PASS" starttime="20190527 22:02:12.492" endtime="20190527 22:02:12.492"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:12.492" endtime="20190527 22:02:12.493"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:12.702" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:12.493" endtime="20190527 22:02:12.702"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:12.707" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:12.913" level="INFO">CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:12.913" level="INFO">${output} = CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:12.703" endtime="20190527 22:02:12.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:13.915" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:12.914" endtime="20190527 22:02:13.915"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:12.492" endtime="20190527 22:02:13.915"></status>
</kw>
<kw name="${INDEX} = 6" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:13.916" level="INFO">6</msg>
<status status="PASS" starttime="20190527 22:02:13.915" endtime="20190527 22:02:13.916"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:13.916" endtime="20190527 22:02:13.917"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:14.122" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:13.917" endtime="20190527 22:02:14.122"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:14.126" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:14.333" level="INFO">CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:14.333" level="INFO">${output} = CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:14.122" endtime="20190527 22:02:14.333"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:15.335" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:14.334" endtime="20190527 22:02:15.335"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:13.915" endtime="20190527 22:02:15.335"></status>
</kw>
<kw name="${INDEX} = 7" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:15.336" level="INFO">7</msg>
<status status="PASS" starttime="20190527 22:02:15.335" endtime="20190527 22:02:15.336"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:15.336" endtime="20190527 22:02:15.336"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:15.541" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:15.336" endtime="20190527 22:02:15.541"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:15.742" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:15.743" level="INFO">CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:15.744" level="INFO">${output} = CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:15.541" endtime="20190527 22:02:15.744"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:16.745" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:15.744" endtime="20190527 22:02:16.745"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:15.335" endtime="20190527 22:02:16.745"></status>
</kw>
<kw name="${INDEX} = 8" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:16.745" level="INFO">8</msg>
<status status="PASS" starttime="20190527 22:02:16.745" endtime="20190527 22:02:16.745"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:16.745" endtime="20190527 22:02:16.746"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:16.951" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:16.746" endtime="20190527 22:02:16.952"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:16.958" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:17.162" level="INFO">CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:17.162" level="INFO">${output} = CAPWAP tunnel state, 0 peers, 0 is run:
Index     Peer IP              Port      State        
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:16.952" endtime="20190527 22:02:17.162"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:18.162" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:17.162" endtime="20190527 22:02:18.162"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:16.745" endtime="20190527 22:02:18.162"></status>
</kw>
<kw name="${INDEX} = 9" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:18.163" level="INFO">9</msg>
<status status="PASS" starttime="20190527 22:02:18.162" endtime="20190527 22:02:18.163"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:18.163" endtime="20190527 22:02:18.163"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:18.366" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:18.164" endtime="20190527 22:02:18.367"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:18.566" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:18.567" level="INFO">CAPWAP tunnel state, 1 peers, 0 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Configure    
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:18.567" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 0 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Configure    
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:18.367" endtime="20190527 22:02:18.567"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:19.567" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:18.567" endtime="20190527 22:02:19.567"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:18.162" endtime="20190527 22:02:19.567"></status>
</kw>
<kw name="${INDEX} = 10" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:19.567" level="INFO">10</msg>
<status status="PASS" starttime="20190527 22:02:19.567" endtime="20190527 22:02:19.567"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:19.568" endtime="20190527 22:02:19.568"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:19.766" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:19.568" endtime="20190527 22:02:19.767"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:19.770" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:19.967" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:19.967" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:19.767" endtime="20190527 22:02:19.967"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:20.967" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:19.967" endtime="20190527 22:02:20.967"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:19.567" endtime="20190527 22:02:20.967"></status>
</kw>
<kw name="${INDEX} = 11" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:20.968" level="INFO">11</msg>
<status status="PASS" starttime="20190527 22:02:20.967" endtime="20190527 22:02:20.968"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:20.968" endtime="20190527 22:02:20.968"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:21.172" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:20.968" endtime="20190527 22:02:21.172"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:21.177" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:21.382" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:21.382" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:21.173" endtime="20190527 22:02:21.382"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:22.382" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:21.382" endtime="20190527 22:02:22.382"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:20.967" endtime="20190527 22:02:22.382"></status>
</kw>
<kw name="${INDEX} = 12" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:22.383" level="INFO">12</msg>
<status status="PASS" starttime="20190527 22:02:22.383" endtime="20190527 22:02:22.383"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:22.383" endtime="20190527 22:02:22.384"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:22.591" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:22.384" endtime="20190527 22:02:22.592"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:22.792" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:22.794" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:22.795" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:22.592" endtime="20190527 22:02:22.795"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:23.796" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:22.795" endtime="20190527 22:02:23.796"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:22.382" endtime="20190527 22:02:23.796"></status>
</kw>
<kw name="${INDEX} = 13" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:23.797" level="INFO">13</msg>
<status status="PASS" starttime="20190527 22:02:23.797" endtime="20190527 22:02:23.797"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:23.797" endtime="20190527 22:02:23.798"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:23.999" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:23.798" endtime="20190527 22:02:23.999"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:24.199" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:24.200" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:24.201" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:23.999" endtime="20190527 22:02:24.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:25.201" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:24.201" endtime="20190527 22:02:25.201"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:23.796" endtime="20190527 22:02:25.201"></status>
</kw>
<kw name="${INDEX} = 14" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:25.201" level="INFO">14</msg>
<status status="PASS" starttime="20190527 22:02:25.201" endtime="20190527 22:02:25.201"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:25.202" endtime="20190527 22:02:25.202"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:25.397" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:25.202" endtime="20190527 22:02:25.397"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:25.401" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:25.598" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:25.598" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:25.398" endtime="20190527 22:02:25.598"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:26.598" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:25.598" endtime="20190527 22:02:26.598"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:25.201" endtime="20190527 22:02:26.598"></status>
</kw>
<kw name="${INDEX} = 15" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:26.599" level="INFO">15</msg>
<status status="PASS" starttime="20190527 22:02:26.599" endtime="20190527 22:02:26.599"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:26.599" endtime="20190527 22:02:26.600"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:26.800" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:26.600" endtime="20190527 22:02:26.801"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:27.001" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:27.002" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:27.002" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:26.801" endtime="20190527 22:02:27.002"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:28.002" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:27.002" endtime="20190527 22:02:28.002"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:26.598" endtime="20190527 22:02:28.002"></status>
</kw>
<kw name="${INDEX} = 16" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:28.004" level="INFO">16</msg>
<status status="PASS" starttime="20190527 22:02:28.003" endtime="20190527 22:02:28.004"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:28.005" endtime="20190527 22:02:28.006"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:28.208" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:28.006" endtime="20190527 22:02:28.208"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:28.409" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:28.409" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:28.409" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:28.208" endtime="20190527 22:02:28.409"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:29.409" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:28.409" endtime="20190527 22:02:29.409"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:28.003" endtime="20190527 22:02:29.409"></status>
</kw>
<kw name="${INDEX} = 17" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:29.411" level="INFO">17</msg>
<status status="PASS" starttime="20190527 22:02:29.410" endtime="20190527 22:02:29.411"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:29.412" endtime="20190527 22:02:29.413"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:29.609" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:29.414" endtime="20190527 22:02:29.609"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:29.809" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:29.811" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:29.812" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:29.609" endtime="20190527 22:02:29.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:30.813" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:29.812" endtime="20190527 22:02:30.813"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:29.410" endtime="20190527 22:02:30.813"></status>
</kw>
<kw name="${INDEX} = 18" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:30.814" level="INFO">18</msg>
<status status="PASS" starttime="20190527 22:02:30.813" endtime="20190527 22:02:30.814"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:30.814" endtime="20190527 22:02:30.815"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:31.022" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:30.815" endtime="20190527 22:02:31.022"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:31.222" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:31.224" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:31.224" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:31.022" endtime="20190527 22:02:31.224"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:32.225" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:31.225" endtime="20190527 22:02:32.225"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:30.813" endtime="20190527 22:02:32.225"></status>
</kw>
<kw name="${INDEX} = 19" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20190527 22:02:32.226" level="INFO">19</msg>
<status status="PASS" starttime="20190527 22:02:32.225" endtime="20190527 22:02:32.226"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:32.226" endtime="20190527 22:02:32.227"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:32.435" level="INFO">AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:32.227" endtime="20190527 22:02:32.436"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show capwap stat</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:32.645" level="INFO">show capwap stat</msg>
<msg timestamp="20190527 22:02:32.646" level="INFO">CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:32.646" level="INFO">${output} = CAPWAP tunnel state, 1 peers, 1 is run:
Index     Peer IP              Port      State        
1         172.30.103.194       5246      Run          
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:32.436" endtime="20190527 22:02:32.646"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:02:33.646" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:02:32.646" endtime="20190527 22:02:33.646"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:32.225" endtime="20190527 22:02:33.646"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:07.232" endtime="20190527 22:02:33.646"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*${AC_IP_VALUE}*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:33.646" endtime="20190527 22:02:33.647"></status>
</kw>
<status status="PASS" starttime="20190527 22:02:07.232" endtime="20190527 22:02:33.647"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show running-config | i spectral</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:33.856" level="INFO">show running-config | i spectral</msg>
<msg timestamp="20190527 22:02:33.857" level="INFO">spectral
 spectral enable radio 1
 spectral enable radio 2
AP740-I-newFlash(config)#</msg>
<msg timestamp="20190527 22:02:33.857" level="INFO">${output} = spectral
 spectral enable radio 1
 spectral enable radio 2
AP740-I-newFlash(config)#</msg>
<status status="PASS" starttime="20190527 22:02:33.650" endtime="20190527 22:02:33.857"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 1*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:33.858" endtime="20190527 22:02:33.858"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 2*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:33.859" endtime="20190527 22:02:33.859"></status>
</kw>
<kw name="Should Not Match" library="BuiltIn">
<doc>Fails if the given ``string`` matches the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 20*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:33.860" endtime="20190527 22:02:33.860"></status>
</kw>
<kw name="Switch Connection" library="Telnet">
<doc>Switches between active connections using an index or an alias.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:33.860" endtime="20190527 22:02:33.861"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:33.862" endtime="20190527 22:02:33.862"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:34.077" level="INFO">WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:02:33.862" endtime="20190527 22:02:34.077"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show ap-config running ${AP_NAME}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:34.099" level="INFO">show ap-config running AP740-I-newFlash</msg>
<msg timestamp="20190527 22:02:34.585" level="INFO">Building configuration...
Current configuration: 135 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
 spectral enable radio 1
 spectral enable radio 2
!
end
WS5308(config-ap)#</msg>
<msg timestamp="20190527 22:02:34.586" level="INFO">${output} = 
Building configuration...
Current configuration: 135 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
 spectral enable radio 1
 spectral enable radio 2...</msg>
<status status="PASS" starttime="20190527 22:02:34.078" endtime="20190527 22:02:34.586"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 1*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:34.586" endtime="20190527 22:02:34.587"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 2*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:34.587" endtime="20190527 22:02:34.588"></status>
</kw>
<kw name="Should Not Match" library="BuiltIn">
<doc>Fails if the given ``string`` matches the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable radio 20*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:34.588" endtime="20190527 22:02:34.589"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no spectral enable radio 1</arg>
</arguments>
<msg timestamp="20190527 22:02:34.606" level="INFO">no spectral enable radio 1</msg>
<status status="PASS" starttime="20190527 22:02:34.589" endtime="20190527 22:02:34.607"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no spectral enable radio 2</arg>
</arguments>
<msg timestamp="20190527 22:02:34.665" level="INFO">WS5308(config-ap)#no spectral enable radio 2</msg>
<status status="PASS" starttime="20190527 22:02:34.607" endtime="20190527 22:02:34.665"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<msg timestamp="20190527 22:02:34.865" level="INFO">WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:02:34.668" endtime="20190527 22:02:34.865"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show ap-config running ${AP_NAME}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:02:34.885" level="INFO">show ap-config running AP740-I-newFlash</msg>
<msg timestamp="20190527 22:02:35.396" level="INFO">Building configuration...
Current configuration: 83 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
!
end
WS5308(config-ap)#</msg>
<msg timestamp="20190527 22:02:35.396" level="INFO">${output} = 
Building configuration...
Current configuration: 83 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
!
end
WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:02:34.866" endtime="20190527 22:02:35.396"></status>
</kw>
<kw name="Should Not Match" library="BuiltIn">
<doc>Fails if the given ``string`` matches the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:02:35.398" endtime="20190527 22:02:35.399"></status>
</kw>
<doc>AP离线以后在AC上对AP进行配置，测试配置是否生效.</doc>
<status status="PASS" starttime="20190527 22:02:06.133" endtime="20190527 22:02:35.401" critical="yes"></status>
</test>
<kw name="Close All Connections" library="Telnet" type="teardown">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20190527 22:02:35.411" endtime="20190527 22:02:35.412"></status>
</kw>
<status status="PASS" starttime="20190527 22:01:58.219" endtime="20190527 22:02:35.412"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Spectral Offline Config">Spectral Offline Config</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
