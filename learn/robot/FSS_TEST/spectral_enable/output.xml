<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.7.2 on win32)" generated="20190527 22:01:47.886" rpa="false">
<suite id="s1" name="Spectral Enable" source="E:\learn\robot\FSS_TEST\spectral_enable\spectral_enable.robot">
<test id="s1-t1" name="fss_auto_testï¼šspectral enable radio x and spectral enable">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ruijie</arg>
</arguments>
<assign>
<var>${Password}</var>
</assign>
<msg timestamp="20190527 22:01:47.953" level="INFO">${Password} = ruijie</msg>
<status status="PASS" starttime="20190527 22:01:47.953" endtime="20190527 22:01:47.953"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>en</arg>
</arguments>
<assign>
<var>${Password_op}</var>
</assign>
<msg timestamp="20190527 22:01:47.954" level="INFO">${Password_op} = en</msg>
<status status="PASS" starttime="20190527 22:01:47.954" endtime="20190527 22:01:47.954"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>apdebug</arg>
</arguments>
<assign>
<var>${Password1}</var>
</assign>
<msg timestamp="20190527 22:01:47.955" level="INFO">${Password1} = apdebug</msg>
<status status="PASS" starttime="20190527 22:01:47.954" endtime="20190527 22:01:47.955"></status>
</kw>
<kw name="Open Connection" library="Telnet">
<doc>Opens a new Telnet connection to the given host and port.</doc>
<arguments>
<arg>host=${AC_IP}</arg>
<arg>port=${AC_PORT}</arg>
</arguments>
<msg timestamp="20190527 22:01:47.956" level="INFO">Opening connection to 172.30.103.194:23 with prompt: (&gt;|#|:)$ (regexp)</msg>
<status status="PASS" starttime="20190527 22:01:47.956" endtime="20190527 22:01:47.963"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
</arguments>
<msg timestamp="20190527 22:01:48.413" level="INFO">WS5308#</msg>
<status status="PASS" starttime="20190527 22:01:47.964" endtime="20190527 22:01:48.414"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show ap-config summary | i ${AP_NAME}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:48.440" level="INFO">show ap-config summary | i AP740-I-newFlash</msg>
<msg timestamp="20190527 22:01:48.645" level="INFO">========= show ap status =========
Radio: Radio ID or Band: 2.4G = 1#, 5G = 2#
       E = enabled, D = disabled, N = Not exist, V = Virtual AP
       Current Sta number
       Channel: * = Global
       Power Level = Percent

Online AP number:</msg>
<msg timestamp="20190527 22:01:48.645" level="INFO">${output} = ========= show ap status =========
Radio: Radio ID or Band: 2.4G = 1#, 5G = 2#
       E = enabled, D = disabled, N = Not exist, V = Virtual AP
       Current Sta number
       Channel: * = Global...</msg>
<status status="PASS" starttime="20190527 22:01:48.415" endtime="20190527 22:01:48.645"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:48.646" endtime="20190527 22:01:48.647"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:48.649" level="INFO">1
Offline AP number: 12

AP Name                                  IP Address      Mac Address    Radio               Radio               Up/Off time   State
---------------------------------------- --------------- -------------- ------------------- ------------------- ------------- -----
AP740-I-newFlash                         172.30.103.147  00d0.f822.334c 1  E   0    1*  100 2  E   0  157*  100    0:00:17:54 Run   
WS5308#</msg>
<msg timestamp="20190527 22:01:48.649" level="INFO">${output} =  1
Offline AP number: 12

AP Name                                  IP Address      Mac Address    Radio               Radio               Up/Off time   State
--------------------------------------...</msg>
<status status="PASS" starttime="20190527 22:01:48.647" endtime="20190527 22:01:48.650"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*${AP_NAME}*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:48.651" endtime="20190527 22:01:48.652"></status>
</kw>
<kw name="Should Not Match" library="BuiltIn">
<doc>Fails if the given ``string`` matches the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*Quit*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:48.654" endtime="20190527 22:01:48.654"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>co</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:48.655" endtime="20190527 22:01:48.656"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:48.656" endtime="20190527 22:01:48.657"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
</arguments>
<msg timestamp="20190527 22:01:48.716" level="INFO">WS5308#</msg>
<status status="PASS" starttime="20190527 22:01:48.657" endtime="20190527 22:01:48.716"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>ap-config ${AP_MAC}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:48.717" endtime="20190527 22:01:48.718"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:48.722" endtime="20190527 22:01:48.723"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s ap</arg>
</arguments>
<msg timestamp="20190527 22:01:49.183" level="INFO">co
Enter configuration commands, one per line.  End with CNTL/Z.
WS5308(config)#</msg>
<status status="PASS" starttime="20190527 22:01:48.726" endtime="20190527 22:01:49.183"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no ${AC_TEST_CMD1}</arg>
</arguments>
<msg timestamp="20190527 22:01:49.185" level="INFO">ap-config 00d0.f822.334c</msg>
<status status="PASS" starttime="20190527 22:01:49.184" endtime="20190527 22:01:49.185"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no ${AC_TEST_CMD2}</arg>
</arguments>
<msg timestamp="20190527 22:01:49.188" level="INFO">You are going to config AP(AP740-I-newFlash), which is online now.</msg>
<status status="PASS" starttime="20190527 22:01:49.187" endtime="20190527 22:01:49.188"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no ${AC_TEST_CMD3}</arg>
</arguments>
<msg timestamp="20190527 22:01:49.207" level="INFO">WS5308(config-ap)#no spectral enable radio 1</msg>
<status status="PASS" starttime="20190527 22:01:49.189" endtime="20190527 22:01:49.207"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no ${AC_TEST_CMD4}</arg>
</arguments>
<msg timestamp="20190527 22:01:49.266" level="INFO">WS5308(config-ap)#no spectral enable radio 2</msg>
<status status="PASS" starttime="20190527 22:01:49.207" endtime="20190527 22:01:49.266"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:49.269" endtime="20190527 22:01:49.269"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:49.543" level="INFO">WS5308(config-ap)#no spectral enable radio 3
WS5308(config-ap)#no spectral enable
WS5308(config-ap)#
WS5308(config-ap)#</msg>
<msg timestamp="20190527 22:01:49.544" level="INFO">${output} = WS5308(config-ap)#no spectral enable radio 3
WS5308(config-ap)#no spectral enable
WS5308(config-ap)#
WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:01:49.270" endtime="20190527 22:01:49.544"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:01:50.545" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:01:49.544" endtime="20190527 22:01:50.545"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AC_TEST_CMD1}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:50.571" level="INFO">spectral enable radio 1</msg>
<msg timestamp="20190527 22:01:50.572" level="INFO">${output} = spectral enable radio 1
</msg>
<status status="PASS" starttime="20190527 22:01:50.548" endtime="20190527 22:01:50.572"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AC_TEST_CMD2}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:50.626" level="INFO">WS5308(config-ap)#spectral enable radio 2</msg>
<msg timestamp="20190527 22:01:50.626" level="INFO">${output} = WS5308(config-ap)#spectral enable radio 2
</msg>
<status status="PASS" starttime="20190527 22:01:50.573" endtime="20190527 22:01:50.626"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AC_TEST_CMD3}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:50.698" level="INFO">WS5308(config-ap)#spectral enable radio 3</msg>
<msg timestamp="20190527 22:01:50.698" level="INFO">${output} = WS5308(config-ap)#spectral enable radio 3
</msg>
<status status="PASS" starttime="20190527 22:01:50.628" endtime="20190527 22:01:50.698"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AC_TEST_CMD4}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:50.757" level="INFO">WS5308(config-ap)#spectral enable</msg>
<msg timestamp="20190527 22:01:50.758" level="INFO">${output} = WS5308(config-ap)#spectral enable
</msg>
<status status="PASS" starttime="20190527 22:01:50.699" endtime="20190527 22:01:50.758"></status>
</kw>
<kw name="Read Until Prompt" library="Telnet">
<doc>Reads output until the prompt is encountered.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:50.960" level="INFO">WS5308(config-ap)#</msg>
<msg timestamp="20190527 22:01:50.960" level="INFO">${output} = WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:01:50.759" endtime="20190527 22:01:50.960"></status>
</kw>
<kw name="Execute Command" library="Telnet">
<doc>Executes the given ``command`` and reads, logs, and returns everything until the prompt.</doc>
<arguments>
<arg>show ap-config running ${AP_NAME}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:50.976" level="INFO">show ap-config running AP740-I-newFlash</msg>
<msg timestamp="20190527 22:01:51.470" level="INFO">Building configuration...
Current configuration: 179 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
 spectral enable radio 1
 spectral enable radio 2
 spectral enable radio 3
 spectral enable
!
end
WS5308(config-ap)#</msg>
<msg timestamp="20190527 22:01:51.470" level="INFO">${output} = 
Building configuration...
Current configuration: 179 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
 spectral enable radio 1
 spectral enable radio 2...</msg>
<status status="PASS" starttime="20190527 22:01:50.961" endtime="20190527 22:01:51.470"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.471" endtime="20190527 22:01:51.472"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*${AC_CHECK_RET1}*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.473" endtime="20190527 22:01:51.473"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*${AC_CHECK_RET2}*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.474" endtime="20190527 22:01:51.474"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*${AC_CHECK_RET3}*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.475" endtime="20190527 22:01:51.475"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*${AC_CHECK_RET4}*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.476" endtime="20190527 22:01:51.477"></status>
</kw>
<kw name="Open Connection" library="Telnet">
<doc>Opens a new Telnet connection to the given host and port.</doc>
<arguments>
<arg>host=${AP_IP}</arg>
<arg>port=${AP_PORT}</arg>
</arguments>
<msg timestamp="20190527 22:01:51.477" level="INFO">Opening connection to 172.30.103.147:23 with prompt: (&gt;|#|:)$ (regexp)</msg>
<status status="PASS" starttime="20190527 22:01:51.477" endtime="20190527 22:01:51.478"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Password}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.479" endtime="20190527 22:01:51.479"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
<arg>Username:</arg>
<arg>Password:</arg>
</arguments>
<msg timestamp="20190527 22:01:51.698" level="INFO">User Access Verification

Password:</msg>
<status status="PASS" starttime="20190527 22:01:51.484" endtime="20190527 22:01:51.698"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>${Password}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.699" endtime="20190527 22:01:51.699"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.701" endtime="20190527 22:01:51.701"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
</arguments>
<msg timestamp="20190527 22:01:51.937" level="INFO">AP740-I-newFlash&gt;</msg>
<status status="PASS" starttime="20190527 22:01:51.702" endtime="20190527 22:01:51.937"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Password_op}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.938" endtime="20190527 22:01:51.938"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>${Password_op}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.939" endtime="20190527 22:01:51.940"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.940" endtime="20190527 22:01:51.940"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Password1}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.940" endtime="20190527 22:01:51.941"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>${Password1}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.941" endtime="20190527 22:01:51.942"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:51.942" endtime="20190527 22:01:51.942"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
</arguments>
<msg timestamp="20190527 22:01:52.158" level="INFO">en

Password:
AP740-I-newFlash#</msg>
<status status="PASS" starttime="20190527 22:01:51.942" endtime="20190527 22:01:52.159"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AP_CHECK_CMD}</arg>
</arguments>
<msg timestamp="20190527 22:01:52.358" level="INFO">show running-config | i spectral</msg>
<status status="PASS" starttime="20190527 22:01:52.161" endtime="20190527 22:01:52.358"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
<arg>${AP_CHECK_RET1}</arg>
</arguments>
<msg timestamp="20190527 22:01:52.362" level="INFO">spectral
 spectral enable radio 1</msg>
<status status="PASS" starttime="20190527 22:01:52.360" endtime="20190527 22:01:52.362"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
<arg>${AP_CHECK_RET2}</arg>
</arguments>
<msg timestamp="20190527 22:01:52.367" level="INFO">spectral enable radio 2</msg>
<status status="PASS" starttime="20190527 22:01:52.365" endtime="20190527 22:01:52.367"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
<arg>${AP_CHECK_RET3}</arg>
</arguments>
<msg timestamp="20190527 22:01:52.368" level="INFO">spectral enable radio 3</msg>
<status status="PASS" starttime="20190527 22:01:52.367" endtime="20190527 22:01:52.368"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
<arg>${AP_CHECK_RET4}</arg>
</arguments>
<msg timestamp="20190527 22:01:52.369" level="INFO">spectral enable</msg>
<status status="PASS" starttime="20190527 22:01:52.369" endtime="20190527 22:01:52.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:01:53.370" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:01:52.370" endtime="20190527 22:01:53.370"></status>
</kw>
<kw name="Switch Connection" library="Telnet">
<doc>Switches between active connections using an index or an alias.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:53.372" endtime="20190527 22:01:53.373"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:53.374" endtime="20190527 22:01:53.375"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
</arguments>
<msg timestamp="20190527 22:01:53.598" level="INFO">WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:01:53.376" endtime="20190527 22:01:53.598"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no ${AC_TEST_CMD1}</arg>
</arguments>
<msg timestamp="20190527 22:01:53.615" level="INFO">no spectral enable radio 1</msg>
<status status="PASS" starttime="20190527 22:01:53.599" endtime="20190527 22:01:53.615"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no ${AC_TEST_CMD2}</arg>
</arguments>
<msg timestamp="20190527 22:01:53.686" level="INFO">WS5308(config-ap)#no spectral enable radio 2</msg>
<status status="PASS" starttime="20190527 22:01:53.617" endtime="20190527 22:01:53.686"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no ${AC_TEST_CMD3}</arg>
</arguments>
<msg timestamp="20190527 22:01:53.746" level="INFO">WS5308(config-ap)#no spectral enable radio 3</msg>
<status status="PASS" starttime="20190527 22:01:53.687" endtime="20190527 22:01:53.746"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>no ${AC_TEST_CMD4}</arg>
</arguments>
<msg timestamp="20190527 22:01:53.815" level="INFO">WS5308(config-ap)#no spectral enable</msg>
<status status="PASS" starttime="20190527 22:01:53.747" endtime="20190527 22:01:53.815"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>show ap-config running ${AP_NAME}</arg>
</arguments>
<msg timestamp="20190527 22:01:53.896" level="INFO">WS5308(config-ap)#show ap-config running AP740-I-newFlash</msg>
<status status="PASS" starttime="20190527 22:01:53.816" endtime="20190527 22:01:53.896"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:53.897" endtime="20190527 22:01:53.898"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:54.400" level="INFO">Building configuration...
Current configuration: 83 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
!
end
WS5308(config-ap)#</msg>
<msg timestamp="20190527 22:01:54.400" level="INFO">${output} = 
Building configuration...
Current configuration: 83 bytes

!
ap-config AP740-I-newFlash
 ap-mac 00d0.f822.334c
 wlan-cap enable 1
!
end
WS5308(config-ap)#</msg>
<status status="PASS" starttime="20190527 22:01:53.901" endtime="20190527 22:01:54.400"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:54.402" endtime="20190527 22:01:54.406"></status>
</kw>
<kw name="Should Not Match" library="BuiltIn">
<doc>Fails if the given ``string`` matches the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:54.409" endtime="20190527 22:01:54.409"></status>
</kw>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>${AC_CHECK_TMP}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:54.410" endtime="20190527 22:01:54.410"></status>
</kw>
<kw name="Switch Connection" library="Telnet">
<doc>Switches between active connections using an index or an alias.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:54.411" endtime="20190527 22:01:54.411"></status>
</kw>
<kw name="Write Bare" library="Telnet">
<doc>Writes the given text, and nothing else, into the connection.</doc>
<arguments>
<arg>\r\n</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:54.411" endtime="20190527 22:01:54.411"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
</arguments>
<msg timestamp="20190527 22:01:54.412" level="INFO">AP740-I-newFlash#</msg>
<status status="PASS" starttime="20190527 22:01:54.412" endtime="20190527 22:01:54.412"></status>
</kw>
<kw name="Write" library="Telnet">
<doc>Writes the given text plus a newline into the connection.</doc>
<arguments>
<arg>${AP_CHECK_CMD}</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:54.412" endtime="20190527 22:01:54.414"></status>
</kw>
<kw name="Read Until Regexp" library="Telnet">
<doc>Reads output until any of the ``expected`` regular expressions match.</doc>
<arguments>
<arg>(&gt;|#)</arg>
<arg>\\sRETURN\\s</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20190527 22:01:54.426" level="INFO">AP740-I-newFlash#</msg>
<msg timestamp="20190527 22:01:54.426" level="INFO">${output} = AP740-I-newFlash#</msg>
<status status="PASS" starttime="20190527 22:01:54.414" endtime="20190527 22:01:54.426"></status>
</kw>
<kw name="Should Not Match" library="BuiltIn">
<doc>Fails if the given ``string`` matches the given ``pattern``.</doc>
<arguments>
<arg>${output}</arg>
<arg>*spectral enable*</arg>
</arguments>
<status status="PASS" starttime="20190527 22:01:54.427" endtime="20190527 22:01:54.427"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190527 22:01:55.430" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190527 22:01:54.429" endtime="20190527 22:01:55.430"></status>
</kw>
<kw name="Close All Connections" library="Telnet" type="teardown">
<doc>Closes all open connections and empties the connection cache.</doc>
<status status="PASS" starttime="20190527 22:01:55.433" endtime="20190527 22:01:55.434"></status>
</kw>
<status status="PASS" starttime="20190527 22:01:47.951" endtime="20190527 22:01:55.435" critical="yes"></status>
</test>
<status status="PASS" starttime="20190527 22:01:47.888" endtime="20190527 22:01:55.446"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Spectral Enable">Spectral Enable</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
